"""create tables

Revision ID: 90614c882db4
Revises: 
Create Date: 2024-07-26 22:31:02.453126

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '90614c882db4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("""
    CREATE TABLE foods (
        id SERIAL PRIMARY KEY,
        name VARCHAR NOT NULL,
        unit VARCHAR NOT NULL
    )
    """)
    op.execute("""
    CREATE TABLE users (
        id SERIAL PRIMARY KEY,
        name VARCHAR NOT NULL,
        password VARCHAR NOT NULL
    )
    """)
    op.execute("""
    CREATE TABLE storages (
        id SERIAL PRIMARY KEY,
        food_id INTEGER NOT NULL REFERENCES foods(id),
        user_id INTEGER NOT NULL REFERENCES users(id),
        added_at TIMESTAMP NOT NULL,
        quantity FLOAT NOT NULL
    )
    """)
    op.execute("""
    CREATE TABLE recipes (
        id SERIAL PRIMARY KEY,
        user_id INTEGER NOT NULL REFERENCES users(id),
        title VARCHAR NOT NULL,
        content VARCHAR NOT NULL
    )
    """)
    op.execute("""
    CREATE TABLE recipe_foods (
        id SERIAL PRIMARY KEY,
        food_id INTEGER NOT NULL REFERENCES foods(id),
        recipe_id INTEGER NOT NULL REFERENCES recipes(id),
        quantity FLOAT NOT NULL
    )
    """)
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('foods',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(), nullable=False),
    # sa.Column('unit', sa.String(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('users',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(), nullable=False),
    # sa.Column('password', sa.String(), nullable=False),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('storages',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('food_id', sa.Integer(), nullable=False),
    # sa.Column('user_id', sa.Integer(), nullable=False),
    # sa.Column('added_at', sa.DateTime(), nullable=False),
    # sa.Column('quantity', sa.Float(), nullable=False),
    # sa.ForeignKeyConstraint(['food_id'], ['foods.id'], ),
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('recipe_foods',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('food_id', sa.Integer(), nullable=False),
    # sa.Column('recipe_id', sa.Integer(), nullable=False),
    # sa.Column('quantity', sa.Float(), nullable=False),
    # sa.ForeignKeyConstraint(['food_id'], ['foods.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('recipes',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('user_id', sa.Integer(), nullable=False),
    # sa.Column('title', sa.String(), nullable=False),
    # sa.Column('content', sa.String(), nullable=False),
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipes')
    op.drop_table('recipe_foods')
    op.drop_table('storages')
    op.drop_table('users')
    op.drop_table('foods')
    # ### end Alembic commands ###
